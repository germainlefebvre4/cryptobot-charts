replicaCount: 1

image:
  repository: germainlefebvre4/cryptobot-binance
  # pullPolicy: IfNotPresent
  pullPolicy: Always
  tag: "0.1.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts: []
  tls: []

resources:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: cryptobot.fr/name
          operator: In
          values:
          - binance
      topologyKey: "kubernetes.io/hostname"

envs:
  - name: PROJECT_NAME
    value: Cryptobot Binance
  - name: SERVER_NAME
    value: cryptobot-binance
  - name: SERVER_HOST
    value: http://cryptobot-binance
  - name: REDIS_SERVER
    value: cryptobot-database-postgresql
  - name: REDIS_PORT
    value: 5432
  - name: REDIS_DB
    value: binance
  - name: REDIS_USER
    value: cryptobot
  - name: API_URL
    value: http://cryptobot-api/private/api/v1

cache:
  redis:
    sentinel:
      server: cryptobot-redis
      port: 26379
    database: 0
    username: cryptobot
    password: myPassword

config:
  api:
    secret: test123
